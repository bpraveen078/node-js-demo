var express=require("express"),path=require("path"),logger=require("morgan"),bodyParser=require("body-parser"),sql=require("mssql"),_=require("lodash"),jwt=require("jsonwebtoken"),validate=require("validate.js"),dbConfig={server:"TR-005\\SQLEXPRESS",database:"SampleDB",user:"sa",password:"test12$",port:"60606"};(common={}).express=express,common.path=path,common.logger=logger,common.bodyParser=bodyParser,common.sql=sql,common._=_,common.jwt=jwt,common.dbConfig=dbConfig,common.currentUser={},common.validate=validate,module.exports=common;var cors=require("cors");(app=(common=require("./common.js")).express()).use(cors());var user=require("./routes/user.js");function getUser(o,s){common.sql.connect(common.dbConfig,function(e){e&&console.log("Connection issue : "+e);var r=new common.sql.Request;r.input("username",common.sql.VarChar,o),r.query("select * from dbo.Users where username=@username",function(e,r){common.sql.close(),e&&(console.log(e),logger.error.write(e)),s(r.recordset[0])})})}function createToken(e){var r=e;return r.RoleId=1,r.UserTypeId=1,common.jwt.sign(common._.omit(r,"password"),secretKey,{expiresIn:18e3})}function S4(){return(65536*(1+Math.random())|0).toString(16).substring(1)}function getGuid(){return guid=(S4()+S4()+"-"+S4()+"-4"+S4().substr(0,3)+"-"+S4()+"-"+S4()+S4()+S4()).toLowerCase()}function errorHandler(e,r,o,s){o.status(500),e.hasOwnProperty("message")?o.status(500).send({StatusCode:200,Status:"Error",Result:{Message:e.message}}):o.status(500).send({StatusCode:200,Status:"Error",Result:{Message:e}})}function getUser(o,s){common.sql.connect(common.dbConfig,function(e){e&&console.log("Connection issue : "+e);var r=new common.sql.Request;r.input("username",common.sql.VarChar,o),r.query("select * from dbo.Users where username=@username",function(e,r){common.sql.close(),e&&(console.log(e),logger.error.write(e)),s(r.recordset[0])})})}function createToken(e){var r=e;return r.RoleId=1,r.UserTypeId=1,common.jwt.sign(common._.omit(r,"password"),secretKey,{expiresIn:18e3})}function S4(){return(65536*(1+Math.random())|0).toString(16).substring(1)}function getGuid(){return guid=(S4()+S4()+"-"+S4()+"-4"+S4().substr(0,3)+"-"+S4()+"-"+S4()+S4()+S4()).toLowerCase()}function errorHandler(e,r,o,s){o.status(500),e.hasOwnProperty("message")?o.status(500).send({StatusCode:200,Status:"Error",Result:{Message:e.message}}):o.status(500).send({StatusCode:200,Status:"Error",Result:{Message:e}})}logger=require("./helpers/loggerhelper.js"),app.use(require("express-domain-middleware")),app.use(common.bodyParser.json({limit:"10mb"})),secretKey="XYZABC",app.use(common.bodyParser.urlencoded({limit:"10mb",extended:!0})),process.on("uncaughtException",function(e){console.log(e)}),app.all("/api/*",function(o,s,n){var e=o.headers.authorization;logger.info.write("-----Came to authentication-----"),common.jwt.verify(e,secretKey,function(e,r){if(e)return logger.error.write(e),errorHandler("Authentication Error",o,s,null);common.currentUser=r,n()})}),app.post("/token",function(r,o){try{getUser(r.body.username,function(e){return e?e.Password!=r.body.password?errorHandler("Password not matched",r,o,null):void o.status(201).send({id_token:createToken(e)}):errorHandler("User not exist",r,o,null)})}catch(e){return logger.error.write(e),errorHandler(e,r,o,null)}}),app.use(user),module.exports=app,express=require("express"),path=require("path"),logger=require("morgan"),bodyParser=require("body-parser"),sql=require("mssql"),_=require("lodash"),jwt=require("jsonwebtoken"),validate=require("validate.js"),dbConfig={server:"TR-005\\SQLEXPRESS",database:"SampleDB",user:"sa",password:"test12$",port:"60606"},(common={}).express=express,common.path=path,common.logger=logger,common.bodyParser=bodyParser,common.sql=sql,common._=_,common.jwt=jwt,common.dbConfig=dbConfig,common.currentUser={},common.validate=validate,module.exports=common,cors=require("cors"),(app=(common=require("./common.js")).express()).use(cors()),user=require("./routes/user.js"),logger=require("./helpers/loggerhelper.js"),app.use(require("express-domain-middleware")),app.use(common.bodyParser.json({limit:"10mb"})),secretKey="XYZABC",app.use(common.bodyParser.urlencoded({limit:"10mb",extended:!0})),process.on("uncaughtException",function(e){console.log(e)}),app.all("/api/*",function(o,s,n){var e=o.headers.authorization;logger.info.write("-----Came to authentication-----"),common.jwt.verify(e,secretKey,function(e,r){if(e)return logger.error.write(e),errorHandler("Authentication Error",o,s,null);common.currentUser=r,n()})}),app.post("/token",function(r,o){try{getUser(r.body.username,function(e){return e?e.Password!=r.body.password?errorHandler("Password not matched",r,o,null):void o.status(201).send({id_token:createToken(e)}):errorHandler("User not exist",r,o,null)})}catch(e){return logger.error.write(e),errorHandler(e,r,o,null)}}),app.use(user),module.exports=app,express=require("express"),path=require("path"),logger=require("morgan"),bodyParser=require("body-parser"),sql=require("mssql"),_=require("lodash"),jwt=require("jsonwebtoken"),validate=require("validate.js");var configFile=require("./config.json");function getUser(o,s){common.sql.connect(common.dbConfig,function(e){e&&console.log("Connection issue : "+e);var r=new common.sql.Request;r.input("username",common.sql.VarChar,o),r.query("select * from dbo.Users where username=@username",function(e,r){common.sql.close(),e&&(console.log(e),logger.error.write(e)),s(r.recordset[0])})})}function createToken(e){var r=e;return r.RoleId=1,r.UserTypeId=1,common.jwt.sign(common._.omit(r,"password"),secretKey,{expiresIn:18e3})}function S4(){return(65536*(1+Math.random())|0).toString(16).substring(1)}function getGuid(){return guid=(S4()+S4()+"-"+S4()+"-4"+S4().substr(0,3)+"-"+S4()+"-"+S4()+S4()+S4()).toLowerCase()}function errorHandler(e,r,o,s){o.status(500),e.hasOwnProperty("message")?o.status(500).send({StatusCode:200,Status:"Error",Result:{Message:e.message}}):o.status(500).send({StatusCode:200,Status:"Error",Result:{Message:e}})}(common={}).express=express,common.path=path,common.logger=logger,common.bodyParser=bodyParser,common.sql=sql,common._=_,common.jwt=jwt,common.dbConfig=configFile.dbConfig,common.currentUser={},common.validate=validate,common.configFile=configFile,module.exports=common,cors=require("cors"),(app=(common=require("./common.js")).express()).use(cors()),user=require("./routes/user.js"),logger=require("./helpers/loggerhelper.js"),app.use(require("express-domain-middleware")),app.use(common.bodyParser.json({limit:"10mb"})),secretKey="XYZABC",app.use(common.bodyParser.urlencoded({limit:"10mb",extended:!0})),process.on("uncaughtException",function(e){console.log(e)}),app.all("/api/*",function(o,s,n){var e=o.headers.authorization;logger.info.write("-----Came to authentication-----"),common.jwt.verify(e,secretKey,function(e,r){if(e)return logger.error.write(e),errorHandler("Authentication Error",o,s,null);common.currentUser=r,n()})}),app.post("/token",function(r,o){try{getUser(r.body.username,function(e){return e?e.Password!=r.body.password?errorHandler("Password not matched",r,o,null):void o.status(201).send({id_token:createToken(e)}):errorHandler("User not exist",r,o,null)})}catch(e){return logger.error.write(e),errorHandler(e,r,o,null)}}),app.use(user),module.exports=app;express=require("express"),path=require("path"),logger=require("morgan"),bodyParser=require("body-parser"),sql=require("mssql"),_=require("lodash"),jwt=require("jsonwebtoken"),validate=require("validate.js"),configFile=require("./config.json");(common={}).express=express,common.path=path,common.logger=logger,common.bodyParser=bodyParser,common.sql=sql,common._=_,common.jwt=jwt,common.dbConfig=configFile.dbConfig,common.currentUser={},common.validate=validate,common.configFile=configFile,module.exports=common;var common,app;cors=require("cors");(app=(common=require("./common.js")).express()).use(cors());user=require("./routes/user.js"),logger=require("./helpers/loggerhelper.js");function getUser(o,s){common.sql.connect(common.dbConfig,function(e){e&&console.log("Connection issue : "+e);var r=new common.sql.Request;r.input("username",common.sql.VarChar,o),r.query("select * from dbo.Users where username=@username",function(e,r){common.sql.close(),e&&(console.log(e),logger.error.write(e)),s(r.recordset[0])})})}function createToken(e){var r=e;return r.RoleId=1,r.UserTypeId=1,common.jwt.sign(common._.omit(r,"password"),secretKey,{expiresIn:18e3})}function S4(){return(65536*(1+Math.random())|0).toString(16).substring(1)}function getGuid(){return guid=(S4()+S4()+"-"+S4()+"-4"+S4().substr(0,3)+"-"+S4()+"-"+S4()+S4()+S4()).toLowerCase()}function errorHandler(e,r,o,s){o.status(500),e.hasOwnProperty("message")?o.status(500).send({StatusCode:200,Status:"Error",Result:{Message:e.message}}):o.status(500).send({StatusCode:200,Status:"Error",Result:{Message:e}})}app.use(require("express-domain-middleware")),app.use(common.bodyParser.json({limit:"10mb"})),secretKey="XYZABC",app.use(common.bodyParser.urlencoded({limit:"10mb",extended:!0})),process.on("uncaughtException",function(e){console.log(e)}),app.all("/api/*",function(o,s,n){var e=o.headers.authorization;logger.info.write("-----Came to authentication-----"),common.jwt.verify(e,secretKey,function(e,r){if(e)return logger.error.write(e),errorHandler("Authentication Error",o,s,null);common.currentUser=r,n()})}),app.post("/token",function(r,o){try{getUser(r.body.username,function(e){return e?e.Password!=r.body.password?errorHandler("Password not matched",r,o,null):void o.status(201).send({id_token:createToken(e)}):errorHandler("User not exist",r,o,null)})}catch(e){return logger.error.write(e),errorHandler(e,r,o,null)}}),app.use(user),module.exports=app;